// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SVGLClub.Data;

#nullable disable

namespace SVGLClub.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250527195600_AddSessionEntities")]
    partial class AddSessionEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SVGLClub.Data.AssettoSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DurationSecs")
                        .HasColumnType("int");

                    b.Property<string>("Filename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RaceLaps")
                        .HasColumnType("int");

                    b.Property<string>("SessionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrackConfig")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrackName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("SVGLClub.Data.SessionCar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssettoSessionId")
                        .HasColumnType("int");

                    b.Property<int>("BallastKG")
                        .HasColumnType("int");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("DriverGuid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DriverName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Restrictor")
                        .HasColumnType("int");

                    b.Property<string>("Skin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssettoSessionId");

                    b.ToTable("SessionCars");
                });

            modelBuilder.Entity("SVGLClub.Data.SessionEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssettoSessionId")
                        .HasColumnType("int");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("DriverGuid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DriverName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ImpactSpeed")
                        .HasColumnType("float");

                    b.Property<int>("OtherCarId")
                        .HasColumnType("int");

                    b.Property<string>("OtherDrivername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssettoSessionId");

                    b.ToTable("SessionEvents");
                });

            modelBuilder.Entity("SVGLClub.Data.SessionLap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssettoSessionId")
                        .HasColumnType("int");

                    b.Property<int>("BallastKG")
                        .HasColumnType("int");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("CarModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cuts")
                        .HasColumnType("int");

                    b.Property<string>("DriverGuid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DriverName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LapTime")
                        .HasColumnType("int");

                    b.Property<int>("Restrictor")
                        .HasColumnType("int");

                    b.Property<int>("Sector1")
                        .HasColumnType("int");

                    b.Property<int>("Sector2")
                        .HasColumnType("int");

                    b.Property<int>("Sector3")
                        .HasColumnType("int");

                    b.Property<long>("Timestamp")
                        .HasColumnType("bigint");

                    b.Property<string>("Tyre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssettoSessionId");

                    b.ToTable("SessionLaps");
                });

            modelBuilder.Entity("SVGLClub.Data.SessionResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssettoSessionId")
                        .HasColumnType("int");

                    b.Property<int>("BallastKG")
                        .HasColumnType("int");

                    b.Property<long>("BestLap")
                        .HasColumnType("bigint");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("CarModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DriverGuid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DriverName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Restrictor")
                        .HasColumnType("int");

                    b.Property<long>("TotalTime")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AssettoSessionId");

                    b.ToTable("SessionResult");
                });

            modelBuilder.Entity("SVGLClub.Data.SessionCar", b =>
                {
                    b.HasOne("SVGLClub.Data.AssettoSession", "AssettoSession")
                        .WithMany("Cars")
                        .HasForeignKey("AssettoSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssettoSession");
                });

            modelBuilder.Entity("SVGLClub.Data.SessionEvent", b =>
                {
                    b.HasOne("SVGLClub.Data.AssettoSession", "AssettoSession")
                        .WithMany("Events")
                        .HasForeignKey("AssettoSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssettoSession");
                });

            modelBuilder.Entity("SVGLClub.Data.SessionLap", b =>
                {
                    b.HasOne("SVGLClub.Data.AssettoSession", "AssettoSession")
                        .WithMany("Laps")
                        .HasForeignKey("AssettoSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssettoSession");
                });

            modelBuilder.Entity("SVGLClub.Data.SessionResult", b =>
                {
                    b.HasOne("SVGLClub.Data.AssettoSession", "AssettoSession")
                        .WithMany("Results")
                        .HasForeignKey("AssettoSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssettoSession");
                });

            modelBuilder.Entity("SVGLClub.Data.AssettoSession", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("Events");

                    b.Navigation("Laps");

                    b.Navigation("Results");
                });
#pragma warning restore 612, 618
        }
    }
}
