// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SVGLClub.Data;

#nullable disable

namespace SVGLClub.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250527185112_InitialSessionDataSetup")]
    partial class InitialSessionDataSetup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SVGLClub.Data.AssettoSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DurationSecs")
                        .HasColumnType("int");

                    b.Property<string>("Filename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RaceLaps")
                        .HasColumnType("int");

                    b.Property<string>("SessionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrackConfig")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrackName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("SVGLClub.Data.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SteamId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("SVGLClub.Data.Lap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("LapTime")
                        .HasColumnType("time");

                    b.Property<int>("SessionResultId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SessionResultId");

                    b.ToTable("Laps");
                });

            modelBuilder.Entity("SVGLClub.Data.SessionCar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssettoSessionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssettoSessionId");

                    b.ToTable("SessionCars");
                });

            modelBuilder.Entity("SVGLClub.Data.SessionEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssettoSessionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssettoSessionId");

                    b.ToTable("SessionEvents");
                });

            modelBuilder.Entity("SVGLClub.Data.SessionLap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssettoSessionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssettoSessionId");

                    b.ToTable("SessionLaps");
                });

            modelBuilder.Entity("SVGLClub.Data.SessionResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssettoSessionId")
                        .HasColumnType("int");

                    b.Property<int>("Date")
                        .HasColumnType("int");

                    b.Property<int>("DriverId")
                        .HasColumnType("int");

                    b.Property<string>("Track")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssettoSessionId");

                    b.HasIndex("DriverId");

                    b.ToTable("SessionResult");
                });

            modelBuilder.Entity("SVGLClub.Data.Lap", b =>
                {
                    b.HasOne("SVGLClub.Data.SessionResult", "SessionResult")
                        .WithMany()
                        .HasForeignKey("SessionResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SessionResult");
                });

            modelBuilder.Entity("SVGLClub.Data.SessionCar", b =>
                {
                    b.HasOne("SVGLClub.Data.AssettoSession", null)
                        .WithMany("Cars")
                        .HasForeignKey("AssettoSessionId");
                });

            modelBuilder.Entity("SVGLClub.Data.SessionEvent", b =>
                {
                    b.HasOne("SVGLClub.Data.AssettoSession", null)
                        .WithMany("Events")
                        .HasForeignKey("AssettoSessionId");
                });

            modelBuilder.Entity("SVGLClub.Data.SessionLap", b =>
                {
                    b.HasOne("SVGLClub.Data.AssettoSession", null)
                        .WithMany("Laps")
                        .HasForeignKey("AssettoSessionId");
                });

            modelBuilder.Entity("SVGLClub.Data.SessionResult", b =>
                {
                    b.HasOne("SVGLClub.Data.AssettoSession", null)
                        .WithMany("Results")
                        .HasForeignKey("AssettoSessionId");

                    b.HasOne("SVGLClub.Data.Driver", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Driver");
                });

            modelBuilder.Entity("SVGLClub.Data.AssettoSession", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("Events");

                    b.Navigation("Laps");

                    b.Navigation("Results");
                });
#pragma warning restore 612, 618
        }
    }
}
